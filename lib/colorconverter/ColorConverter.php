<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace colorconverter;

use \maglev\MagLevString;
use \maglev\MagLevFunction;
use \php\Boot;
use \maglev\MagLevResult;
use \maglev\MagLev;
use \maglev\MagLevError;
use \maglev\MagLevArray;

class ColorConverter {
	/**
	 * @var MagLev
	 */
	public $maglev;

	/**
	 * @param MagLev $maglev
	 * 
	 * @return void
	 */
	public function __construct ($maglev) {
		#/src/colorconverter/ColorConverter.hx:12: characters 3-23
		$this->maglev = $maglev;
		#/src/colorconverter/ColorConverter.hx:13: characters 3-22
		$this->registerMyMethods();
	}

	/**
	 * @return void
	 */
	public function registerMyMethods () {
		#/src/colorconverter/ColorConverter.hx:17: characters 3-25
		$bus = $this->maglev;
		#/src/colorconverter/ColorConverter.hx:19: lines 19-28
		$this->maglev->register("ColorConverter.FromRGB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:20: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:21: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:22: characters 4-64
			$data->push(MagLevString::fromString("ColorConverter.FromRGB"));
			#/src/colorconverter/ColorConverter.hx:23: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:24: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:25: characters 4-220
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FromRGB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:26: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:27: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:30: lines 30-39
		$this->maglev->register("ColorConverter.FromCIELAB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:31: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:32: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:33: characters 4-67
			$data->push(MagLevString::fromString("ColorConverter.FromCIELAB"));
			#/src/colorconverter/ColorConverter.hx:34: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:35: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:36: characters 4-223
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FromCIELAB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:37: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:38: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:41: lines 41-50
		$this->maglev->register("ColorConverter.FromCMYK", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:42: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:43: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:44: characters 4-65
			$data->push(MagLevString::fromString("ColorConverter.FromCMYK"));
			#/src/colorconverter/ColorConverter.hx:45: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:46: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:47: characters 4-221
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FromCMYK' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:48: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:49: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:52: lines 52-61
		$this->maglev->register("ColorConverter.FromHEX", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:53: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:54: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:55: characters 4-64
			$data->push(MagLevString::fromString("ColorConverter.FromHEX"));
			#/src/colorconverter/ColorConverter.hx:56: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:57: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:58: characters 4-220
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FromHEX' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:59: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:60: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:63: lines 63-72
		$this->maglev->register("ColorConverter.FromXYZ", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:64: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:65: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:66: characters 4-64
			$data->push(MagLevString::fromString("ColorConverter.FromXYZ"));
			#/src/colorconverter/ColorConverter.hx:67: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:68: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:69: characters 4-220
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FromXYZ' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:70: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:71: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:74: lines 74-83
		$this->maglev->register("ColorConverter.ConvertRGB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:75: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:76: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:77: characters 4-67
			$data->push(MagLevString::fromString("ColorConverter.ConvertRGB"));
			#/src/colorconverter/ColorConverter.hx:78: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:79: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:80: characters 4-223
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.ConvertRGB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:81: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:82: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:85: lines 85-94
		$this->maglev->register("ColorConverter.ConvertCIELAB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:86: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:87: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:88: characters 4-70
			$data->push(MagLevString::fromString("ColorConverter.ConvertCIELAB"));
			#/src/colorconverter/ColorConverter.hx:89: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:90: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:91: characters 4-226
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.ConvertCIELAB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:92: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:93: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:96: lines 96-105
		$this->maglev->register("ColorConverter.ConvertCMYK", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:97: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:98: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:99: characters 4-68
			$data->push(MagLevString::fromString("ColorConverter.ConvertCMYK"));
			#/src/colorconverter/ColorConverter.hx:100: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:101: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:102: characters 4-224
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.ConvertCMYK' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:103: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:104: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:107: lines 107-116
		$this->maglev->register("ColorConverter.ConvertHEX", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:108: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:109: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:110: characters 4-67
			$data->push(MagLevString::fromString("ColorConverter.ConvertHEX"));
			#/src/colorconverter/ColorConverter.hx:111: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:112: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:113: characters 4-223
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.ConvertHEX' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:114: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:115: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:118: lines 118-127
		$this->maglev->register("ColorConverter.ConvertXYZ", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:119: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:120: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:121: characters 4-67
			$data->push(MagLevString::fromString("ColorConverter.ConvertXYZ"));
			#/src/colorconverter/ColorConverter.hx:122: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:123: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:124: characters 4-223
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.ConvertXYZ' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:125: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:126: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:129: lines 129-138
		$this->maglev->register("ColorConverter.AddReferenceColorByRGB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:130: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:131: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:132: characters 4-79
			$data->push(MagLevString::fromString("ColorConverter.AddReferenceColorByRGB"));
			#/src/colorconverter/ColorConverter.hx:133: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:134: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:135: characters 4-235
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.AddReferenceColorByRGB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:136: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:137: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:140: lines 140-149
		$this->maglev->register("ColorConverter.AddReferenceColorByCIELAB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:141: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:142: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:143: characters 4-82
			$data->push(MagLevString::fromString("ColorConverter.AddReferenceColorByCIELAB"));
			#/src/colorconverter/ColorConverter.hx:144: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:145: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:146: characters 4-238
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.AddReferenceColorByCIELAB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:147: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:148: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:151: lines 151-160
		$this->maglev->register("ColorConverter.AddReferenceColorByCMYK", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:152: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:153: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:154: characters 4-80
			$data->push(MagLevString::fromString("ColorConverter.AddReferenceColorByCMYK"));
			#/src/colorconverter/ColorConverter.hx:155: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:156: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:157: characters 4-236
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.AddReferenceColorByCMYK' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:158: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:159: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:162: lines 162-171
		$this->maglev->register("ColorConverter.AddReferenceColorByHEX", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:163: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:164: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:165: characters 4-79
			$data->push(MagLevString::fromString("ColorConverter.AddReferenceColorByHEX"));
			#/src/colorconverter/ColorConverter.hx:166: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:167: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:168: characters 4-235
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.AddReferenceColorByHEX' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:169: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:170: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:173: lines 173-182
		$this->maglev->register("ColorConverter.AddReferenceColorByXYZ", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:174: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:175: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:176: characters 4-79
			$data->push(MagLevString::fromString("ColorConverter.AddReferenceColorByXYZ"));
			#/src/colorconverter/ColorConverter.hx:177: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:178: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:179: characters 4-235
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.AddReferenceColorByXYZ' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:180: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:181: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:184: lines 184-193
		$this->maglev->register("ColorConverter.FindReferenceColorByRGB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:185: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:186: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:187: characters 4-80
			$data->push(MagLevString::fromString("ColorConverter.FindReferenceColorByRGB"));
			#/src/colorconverter/ColorConverter.hx:188: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:189: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:190: characters 4-236
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FindReferenceColorByRGB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:191: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:192: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:195: lines 195-204
		$this->maglev->register("ColorConverter.FindReferenceColorByCIELAB", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:196: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:197: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:198: characters 4-83
			$data->push(MagLevString::fromString("ColorConverter.FindReferenceColorByCIELAB"));
			#/src/colorconverter/ColorConverter.hx:199: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:200: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:201: characters 4-239
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FindReferenceColorByCIELAB' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:202: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:203: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:206: lines 206-215
		$this->maglev->register("ColorConverter.FindReferenceColorByCMYK", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:207: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:208: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:209: characters 4-81
			$data->push(MagLevString::fromString("ColorConverter.FindReferenceColorByCMYK"));
			#/src/colorconverter/ColorConverter.hx:210: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:211: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:212: characters 4-237
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FindReferenceColorByCMYK' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:213: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:214: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:217: lines 217-226
		$this->maglev->register("ColorConverter.FindReferenceColorByHEX", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:218: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:219: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:220: characters 4-80
			$data->push(MagLevString::fromString("ColorConverter.FindReferenceColorByHEX"));
			#/src/colorconverter/ColorConverter.hx:221: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:222: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:223: characters 4-236
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FindReferenceColorByHEX' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:224: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:225: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:228: lines 228-237
		$this->maglev->register("ColorConverter.FindReferenceColorByXYZ", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:229: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:230: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:231: characters 4-80
			$data->push(MagLevString::fromString("ColorConverter.FindReferenceColorByXYZ"));
			#/src/colorconverter/ColorConverter.hx:232: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:233: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:234: characters 4-236
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FindReferenceColorByXYZ' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:235: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:236: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:239: lines 239-248
		$this->maglev->register("ColorConverter.FindReferenceColor", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:240: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:241: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:242: characters 4-75
			$data->push(MagLevString::fromString("ColorConverter.FindReferenceColor"));
			#/src/colorconverter/ColorConverter.hx:243: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:244: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:245: characters 4-231
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.FindReferenceColor' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:246: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:247: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:250: lines 250-259
		$this->maglev->register("ColorConverter.RemoveReferenceColorSystem", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:251: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:252: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:253: characters 4-83
			$data->push(MagLevString::fromString("ColorConverter.RemoveReferenceColorSystem"));
			#/src/colorconverter/ColorConverter.hx:254: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:255: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:256: characters 4-239
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.RemoveReferenceColorSystem' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:257: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:258: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:261: lines 261-270
		$this->maglev->register("ColorConverter.GetReferenceColorSystems", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:262: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:263: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:264: characters 4-81
			$data->push(MagLevString::fromString("ColorConverter.GetReferenceColorSystems"));
			#/src/colorconverter/ColorConverter.hx:265: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:266: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:267: characters 4-237
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.GetReferenceColorSystems' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:268: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:269: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:272: lines 272-281
		$this->maglev->register("ColorConverter.GetReferenceColors", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:273: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:274: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:275: characters 4-75
			$data->push(MagLevString::fromString("ColorConverter.GetReferenceColors"));
			#/src/colorconverter/ColorConverter.hx:276: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:277: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:278: characters 4-231
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.GetReferenceColors' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:279: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:280: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:283: lines 283-292
		$this->maglev->register("ColorConverter.GetIlluminationObserverAngles", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:284: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:285: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:286: characters 4-86
			$data->push(MagLevString::fromString("ColorConverter.GetIlluminationObserverAngles"));
			#/src/colorconverter/ColorConverter.hx:287: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:288: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:289: characters 4-242
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.GetIlluminationObserverAngles' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:290: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:291: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:294: lines 294-303
		$this->maglev->register("ColorConverter.SaveReferenceColors", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:295: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:296: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:297: characters 4-76
			$data->push(MagLevString::fromString("ColorConverter.SaveReferenceColors"));
			#/src/colorconverter/ColorConverter.hx:298: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:299: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:300: characters 4-232
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.SaveReferenceColors' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:301: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:302: characters 4-17
			return $result;
		}));
		#/src/colorconverter/ColorConverter.hx:305: lines 305-314
		$this->maglev->register("ColorConverter.LoadReferenceColors", MagLevFunction::fromFunction(function ($args) use (&$bus) {
			#/src/colorconverter/ColorConverter.hx:306: characters 4-48
			$data = MagLevArray::create();
			#/src/colorconverter/ColorConverter.hx:307: characters 4-59
			$data->push(MagLevString::fromString("_not_implemented_"));
			#/src/colorconverter/ColorConverter.hx:308: characters 4-76
			$data->push(MagLevString::fromString("ColorConverter.LoadReferenceColors"));
			#/src/colorconverter/ColorConverter.hx:309: characters 4-56
			$data->push(MagLevString::fromString("colorconverter"));
			#/src/colorconverter/ColorConverter.hx:310: characters 4-48
			$bus->call("MindPowered.Telemetry.Send", $data);
			#/src/colorconverter/ColorConverter.hx:311: characters 4-232
			$err = MagLevError::create(-20000, "You are trying to use the 'ColorConverter.LoadReferenceColors' method but it's not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", $data);
			#/src/colorconverter/ColorConverter.hx:312: characters 4-58
			$result = MagLevResult::fromError($err);
			#/src/colorconverter/ColorConverter.hx:313: characters 4-17
			return $result;
		}));
	}
}

Boot::registerClass(ColorConverter::class, 'colorconverter.ColorConverter');
